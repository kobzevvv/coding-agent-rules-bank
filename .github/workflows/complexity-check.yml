name: Cognitive Complexity Check
on: [push, pull_request]

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai
      
      - name: Run static complexity analysis
        run: |
          python scripts/static-complexity-check.py
      
      - name: Run GPT semantic analysis
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/gpt-complexity-analyzer.py
      
      - name: Check complexity threshold
        run: |
          python scripts/check-complexity-threshold.py
      
      - name: Upload complexity reports
        uses: actions/upload-artifact@v3
        with:
          name: complexity-reports
          path: |
            static-complexity-results.json
            gpt-complexity-results.json
            complexity-threshold-results.json
            complexity-threshold-report.md
          retention-days: 30

  complexity-summary:
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download complexity reports
        uses: actions/download-artifact@v3
        with:
          name: complexity-reports
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Generate complexity summary
        run: |
          python scripts/generate-complexity-summary.py
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            let summary = '';
            try {
              summary = fs.readFileSync('complexity-summary.md', 'utf8');
            } catch (e) {
              summary = 'Complexity analysis completed. Check artifacts for detailed reports.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ§  Cognitive Complexity Analysis Complete\n\n${summary}`
            });

  complexity-alert:
    runs-on: ubuntu-latest
    needs: static-analysis
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download complexity reports
        uses: actions/download-artifact@v3
        with:
          name: complexity-reports
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Create complexity alert
        run: |
          python scripts/create-complexity-alert.py
      
      - name: Comment on PR with alert
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            let alert = '';
            try {
              alert = fs.readFileSync('complexity-alert.md', 'utf8');
            } catch (e) {
              alert = 'ðŸš¨ COMPLEXITY THRESHOLD EXCEEDED\n\nPlease review the complexity reports in the artifacts.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸš¨ COMPLEXITY ALERT\n\n${alert}`
            }); 